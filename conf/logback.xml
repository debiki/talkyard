<configuration>

  <!-- Generates colored log level names. -->
  <conversionRule conversionWord="coloredLevel" converterClass="play.api.libs.logback.ColoredLevel" />

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!--
    Cannot use Talkyard's custom logging layout, StackdriverLayout, because
    in Play Framework's dev mode, dynamically compiled classes are not available [2ABKR05]
    when Logback starts, because of how Play's auto-compile-reload things work.
    A work-around is to place the classes in a separate module, and compile separately,
    and include via sbt-publish-local â€” but I didn't get that to work,
    automatically in dev mode, without running sbt publish-local manually.
    Anyway, about the StackdriverLayout in a sub project, see:
     - https://github.com/playframework/playframework/issues/8125#issuecomment-354162334
     - https://stackoverflow.com/a/54562988/694469
     - https://www.scala-sbt.org/1.x/docs/Multi-Project.html
     - Commit cdbd41fa "Remove ed-logging, to simplify build" in this repo.
    So don't use ed.stackdriver.StackdriverLayout, in dev-test mode. Instead: -->
    <encoder>
      <pattern>%date{HH:mm:ss.SSS} %coloredLevel %logger{15} %message%n%xException{50}</pattern>
    </encoder>
  </appender>

  <!-- https://logback.qos.ch/manual/appenders.html#TimeBasedRollingPolicy   -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>/var/log/talkyard/talkyard-app.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>/var/log/talkyard/talkyard-app.%d{yyyy-ww}.log</fileNamePattern>
      <maxHistory>12</maxHistory>
      <!-- Maybe otherwise a "log loop bug" could fill up the disk? -->
      <totalSizeCap>200MB</totalSizeCap>
    </rollingPolicy>
    <!-- Don't use ed.stackdriver.StackdriverLayout [2ABKR05]  -->
    <encoder>
      <pattern>%date{HH:mm:ss.SSS} %coloredLevel %logger{15} - %message%n%xException{50}</pattern>
    </encoder>
  </appender>

  <logger name="play" level="INFO" />
  <logger name="application" level="TRACE" />
  <logger name="tysvapp" level="TRACE" />
  <logger name="tysvapp.MemCache" level="TRACE" />
  <logger name="org.elasticsearch" level="INFO" />

  <!-- [ty_v1] Remove.  -->
  <logger name="ed.server" level="TRACE" />

  <root level="INFO">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </root>

</configuration>
